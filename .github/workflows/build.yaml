name: demo-flask
on:
  pull_request:
    types: [open, reopen, synchronize]
  push:
    branches: [master]

env:
  DATABASE_URL: "postgres://saleor:saleor@postgres:5432/flaskdemo_test"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: saleor
          POSTGRES_PASSWORD: saleor
          POSTGRES_DB: flaskdemo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check directory
        run: ls -al

      - name: Update system
        run: sudo apt-get update

      - name: Install system dependencies
        run: sudo apt-get install -y libpq-dev

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            - ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install wheel
          python -m pip install -r requirements.txt

#      - name: Create DB
#        run: python manage.py recreate_db

      - name: Run test
        run: python -m unittest
#
#      - uses: actions/cache@v2
#        with:
#          path: ~/.cache/pre-commit
#          key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
#          restore-keys: |
#            - ${{ runner.os }}-pre-commit-
#
#      - name: Run Linters and Checks
#        run: |
#          pre-commit run --all-files
#        if: ${{ always() }}

      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: ./
          file: Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flaskdemo

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}
