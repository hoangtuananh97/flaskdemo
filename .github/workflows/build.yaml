name: demo-flask
on:
  pull_request:
    types: [open, reopen, synchronize]
  push:
    branches: [master]

env:
  DATABASE_URL: "postgres://saleor:saleor@postgres:5432/flaskdemo"

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.8

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: saleor
          POSTGRES_PASSWORD: saleor
          POSTGRES_DB: flaskdemo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check directory
        run: ls -al

      - name: Install system dependencies
        run: apt-get install -y libpq-dev

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            - ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install wheel
          python -m pip install -r requirements.txt

       - name: Run test
         run: |
          python -m unittest

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            - ${{ runner.os }}-pre-commit-

      - name: Run Linters and Checks
        run: |
          pre-commit run --all-files
        if: ${{ always() }}
